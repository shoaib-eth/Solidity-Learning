// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

/**
 * @title DoS
 * @dev This contract allows users to enter their address into a list of entrants.
 * It prevents duplicate entries by checking if the sender's address is already in the list.
 *
 * @notice This contract is vulnerable to a Denial of Service (DoS) attack.
 * If an entrant's address is a contract that consumes a lot of gas or reverts,
 * it can prevent other users from entering the list due to the gas limit or revert behavior.
 *
 * @dev The `enter` function iterates through the entire list of entrants to check for duplicates,
 * which can be exploited by an attacker to cause the function to run out of gas,
 * effectively preventing new entries.
 */
contract DoS {
    mapping(address => bool) public entrants;

    function enter() public {
        // Check for duplicate entrants
        if (entrants[msg.sender]) {
            revert("You've already entered!");
        }
        entrants[msg.sender] = true;
    }
}
